CopyOnWriteArrayList
--------------------


Collection(I)

List extends Collection

CopyOnWriteArrayList(C) implements List


It is a Thread safe version of ArrayList as the name indicates CopyOnWriteArrayList creates a cloned copy of underlying ArrayList for every update operation at certain point both will synchronized automatically which is taken care by JVM internally.

-As update operation will be performed on cloned copy there is no effect for the threads which performs read operation.
-It is costly to use because for every update operation a cloned copy will be created. Hence CopyOnWriteArrayList is the best choice if several read operations and less number of write operations are required to perform.
-insertion order is preserved.
-duplicate objects are allowed.
-heterogeneous objects are allowed.
-null insertion is possible.
-it implements Serializable, Cloneable and RandomAccess interfaces.
-while one thread iterating CopyOnWriteArrayList, the other threads are allowed to modify and we won't get ConcurrentModificationException. That is iterator is fail-safe.
-Iterator of ArrayList can perform remove operation but Iterator of CopyOnWriteArrayList can't perfrom remove operation, otherwise we will get RuntimeException saying UnsupportedOperationException.

Constructors:
-------------

1) CopyOnWriteArrayList l= new CopyOnWriteArrayList();
2) CopyOnWriteArrayList l= new CopyOnWriteArrayList(Collection c);
3) CopyOnWriteArrayList l= new CopyOnWriteArrayList(Object[] a);

Methods:
1) booleanaddIfAbsent(Object o):The element will be added if an only if List doesn't contain this element.
CopyOnWriteArrayList l=new CopyOnWriteArrayList();
l.add("A");
l.add("A");
l.addIfAbsent("B");
l.addIfAbsent("B");
S.o.p(I);//[A,A,B]

2.int addAllAbsent(Collection c):The elements of Collection will be added to the List if elements are absent and returns number of elements added.
ArrayList l=new ArrayList();
l.add("A");
l.add("B");

CopyOnWriteArrayList l1=new CopyOnWriteArrayList();
l1.add("A");
l1.add("C");
S.o.p(l1);//[A,C]
l1.addAll(l);
System.out.println(l1);//[A,C,A,B]

ArrayList l2=new ArrayList();
l2.add("A");
l2.add("D");
l1.addAllAbsent(l2);
S.o.p(l1);//[A,C,A,B,D]
























































































































































































































